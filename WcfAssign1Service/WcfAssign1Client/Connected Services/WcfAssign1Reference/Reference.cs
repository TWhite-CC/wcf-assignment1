//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfAssign1Client.WcfAssign1Reference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfAssign1Reference.IAssign1Service")]
    public interface IAssign1Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssign1Service/IsPrimeNumber", ReplyAction="http://tempuri.org/IAssign1Service/IsPrimeNumberResponse")]
        string IsPrimeNumber(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssign1Service/IsPrimeNumber", ReplyAction="http://tempuri.org/IAssign1Service/IsPrimeNumberResponse")]
        System.Threading.Tasks.Task<string> IsPrimeNumberAsync(int number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssign1Service/SumOfDigits", ReplyAction="http://tempuri.org/IAssign1Service/SumOfDigitsResponse")]
        int SumOfDigits(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssign1Service/SumOfDigits", ReplyAction="http://tempuri.org/IAssign1Service/SumOfDigitsResponse")]
        System.Threading.Tasks.Task<int> SumOfDigitsAsync(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssign1Service/ReverseString", ReplyAction="http://tempuri.org/IAssign1Service/ReverseStringResponse")]
        string ReverseString(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssign1Service/ReverseString", ReplyAction="http://tempuri.org/IAssign1Service/ReverseStringResponse")]
        System.Threading.Tasks.Task<string> ReverseStringAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssign1Service/PrintHTMLTags", ReplyAction="http://tempuri.org/IAssign1Service/PrintHTMLTagsResponse")]
        string PrintHTMLTags(string tag, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssign1Service/PrintHTMLTags", ReplyAction="http://tempuri.org/IAssign1Service/PrintHTMLTagsResponse")]
        System.Threading.Tasks.Task<string> PrintHTMLTagsAsync(string tag, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssign1Service/Sort5Numbers", ReplyAction="http://tempuri.org/IAssign1Service/Sort5NumbersResponse")]
        string Sort5Numbers(bool sortAscending, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAssign1Service/Sort5Numbers", ReplyAction="http://tempuri.org/IAssign1Service/Sort5NumbersResponse")]
        System.Threading.Tasks.Task<string> Sort5NumbersAsync(bool sortAscending, string data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAssign1ServiceChannel : WcfAssign1Client.WcfAssign1Reference.IAssign1Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Assign1ServiceClient : System.ServiceModel.ClientBase<WcfAssign1Client.WcfAssign1Reference.IAssign1Service>, WcfAssign1Client.WcfAssign1Reference.IAssign1Service {
        
        public Assign1ServiceClient() {
        }
        
        public Assign1ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Assign1ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Assign1ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Assign1ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string IsPrimeNumber(int number) {
            return base.Channel.IsPrimeNumber(number);
        }
        
        public System.Threading.Tasks.Task<string> IsPrimeNumberAsync(int number) {
            return base.Channel.IsPrimeNumberAsync(number);
        }
        
        public int SumOfDigits(string number) {
            return base.Channel.SumOfDigits(number);
        }
        
        public System.Threading.Tasks.Task<int> SumOfDigitsAsync(string number) {
            return base.Channel.SumOfDigitsAsync(number);
        }
        
        public string ReverseString(string text) {
            return base.Channel.ReverseString(text);
        }
        
        public System.Threading.Tasks.Task<string> ReverseStringAsync(string text) {
            return base.Channel.ReverseStringAsync(text);
        }
        
        public string PrintHTMLTags(string tag, string data) {
            return base.Channel.PrintHTMLTags(tag, data);
        }
        
        public System.Threading.Tasks.Task<string> PrintHTMLTagsAsync(string tag, string data) {
            return base.Channel.PrintHTMLTagsAsync(tag, data);
        }
        
        public string Sort5Numbers(bool sortAscending, string data) {
            return base.Channel.Sort5Numbers(sortAscending, data);
        }
        
        public System.Threading.Tasks.Task<string> Sort5NumbersAsync(bool sortAscending, string data) {
            return base.Channel.Sort5NumbersAsync(sortAscending, data);
        }
    }
}
